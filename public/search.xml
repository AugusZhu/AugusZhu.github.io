<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[weblogic12c集群搭建]]></title>
    <url>%2F2019%2F08%2F24%2Fweblogic12c%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%2F</url>
    <content type="text"><![CDATA[weblogic12c集群搭建环境配置111 服务器名 监听地址 监听端口 备注 AdminServer (管理) 10.40.128.182 7001 管理服务器 proxy-server 10.40.128.182 8080 代理服务器 Server-0 10.40.128.182 9002 受管服务器 Server-1 10.40.128.183 9002 受管服务器 启动管理服务器进去创建的域所在目录，执行nohup ./bin/startWeblogic.sh &amp; 进入控制台http://10.40.128.182:7001/console 配置服务器 点击环境-&gt;服务器-&gt;新建 输入服务器地名Server-0，主机IP 10.40.128.182，端口号 9002 集群不用选择 同理，配置好Server-1，proxy-server ##创建集群 点击环境-&gt;集群-&gt;新建-&gt;集群 选择多点传送，不用管多点传送地址 点击确定 ##创建计算机 创建计算机以配置节点管理器 点击环境-&gt;计算机-&gt;新建，输入计算机名称，操作系统类型 将连接类型设为普通，监听地址改为10.40.128.182 点击确定 ##配置受管服务器的计算机和集群 点击环境-&gt;服务器，点击服务server-0 配置计算机和集群信息 同理配置Server-1，proxy-server 但是procy-server不需要配置集群。 ##启动节点管理器进入创建的域所在的目录，执行nohup ./bin/startNodeManager.sh &gt; nodeManager.log 2&gt;&amp;1 &amp; ##配置代理服务器进入weblogic目录下 ./wlserver/common/bin/执行./config.sh选择更新现有配置。创建代理服务器，服务器选择proxy-server。进入所在域的目录，进入./apps/OracleProxy4_Cluster-0_proxy-server/WEB-INF,修改weblogic.xml。修改如图参数为项目的上下文。然后部署更新代理服务器项目。 ##启动服务器复制10.40.128.182上域所在目录，到10.40.128.183下。启动183的weblogic。在182执行 ./bin/startManagedWeblogic.sh proxy-server http://10.40.128.182:7001./bin/startManagedWeblogic.sh Server-0 http://10.40.128.182:7001在183执行./bin/startManagedWeblogic.sh Server-1 http://10.30.128.182:7001可在http://10.40.128.182:7001/console服务器上看到执行成功。(/images/pasted-12.png) ##配置session复制在项目的WEF-INF文件夹下新增weblogic.xml: 123456789101112131415&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;!DOCTYPE weblogic-web-app PUBLIC "-//BEA Systems, Inc.//DTD Web Application 8.1//EN" "http://www.bea.com/servers/wls810/dtd/weblogic810-web-jar.dtd"&gt;&lt;weblogic-web-app&gt; &lt;session-descriptor&gt; &lt;session-param&gt; &lt;param-name&gt;CookieName&lt;/param-name&gt; &lt;param-value&gt;JSESSIONID1&lt;/param-value&gt; &lt;/session-param&gt; &lt;session-param&gt; &lt;param-name&gt;PersistentStoreType&lt;/param-name&gt; &lt;param-value&gt;replicated_if_clustered&lt;/param-value&gt; &lt;/session-param&gt; &lt;/session-descriptor&gt;&lt;/weblogic-web-app&gt; ##完成部署项目，完成后。访问http://10.40.128.182:8080/core ###踩坑 后台免密启动受管服务器进入sercers文件夹下需要免密启动的服务器文件夹，进入security目录，创建boot.properties。格式为： 12username=weblogicpassword=weblogic 首次启动后自动会被加密 报错信息如下：启动时未能连接到管理服务器。可能是节点管理器未能启动的原因。需要先启动管理服务器上的节点管理器。nohup ./startNodeManager.sh &gt; nodeManager.log 2&gt;&amp;1 &amp;0v0 项目启动后发现点击登录后仍然跳转到登录页面不报错，怀疑是session复制的问题。经过研究发现是由于2台受管服务器连接的不是同一个redis。修改config.properties中redis.ip为其中一台服务器的ip。2台服务器的redis最好做一个主备。 websocket在weblogic服务器下无法使用，sockJs会自动切换到xhr-streaming协议。 项目启动后，登陆页面后跳转报错，提示服务器资源无法访问。由于weblogic在访问/时会自动跳转到/index.html，因此需要在页面注册注册index.html。]]></content>
      <categories>
        <category>weblogic12c</category>
      </categories>
      <tags>
        <tag>weblogic12c</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle修复系统包损坏]]></title>
    <url>%2F2019%2F08%2F21%2FOracle%E4%BF%AE%E5%A4%8D%E7%B3%BB%E7%BB%9F%E5%8C%85%E6%8D%9F%E5%9D%8F%2F</url>
    <content type="text"><![CDATA[问题：项目上遇到了dbms_aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。 解决办法：oracle加密系统包损坏后无法通过单独编译包来恢复，需要使用内置脚本catproc.sql重新编译整个oracle的系统工具包。操作方法： 1 在oracle服务器上找到catproc.sql文件 2 sqlplus下执行此脚本，执行时间可能较久 3 修复完成后有些过程可能需要重新授权]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[本博客搭建指南]]></title>
    <url>%2F2019%2F08%2F20%2F%E6%9C%AC%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97%2F</url>
    <content type="text"><![CDATA[构架1Hexo + Github Pages + Next 参考网址: 链接]]></content>
  </entry>
</search>
