<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>夏木の博客</title>
  
  <subtitle>知行合一</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://feyfey.online/"/>
  <updated>2019-12-09T10:06:37.110Z</updated>
  <id>http://feyfey.online/</id>
  
  <author>
    <name>AugusZhu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tomcat调优</title>
    <link href="http://feyfey.online/2019/12/09/Tomcat%E8%B0%83%E4%BC%98/"/>
    <id>http://feyfey.online/2019/12/09/Tomcat调优/</id>
    <published>2019-12-09T09:42:00.000Z</published>
    <updated>2019-12-09T10:06:37.110Z</updated>
    
    <content type="html"><![CDATA[<h5 id="Tomcat运行模式"><a href="#Tomcat运行模式" class="headerlink" title="Tomcat运行模式"></a>Tomcat运行模式</h5><blockquote><p>分3种模式: bio,nio,apr 一般使用nio模式<br>bio效率低,apr对系统配置有一些比较高的要求</p></blockquote><h5 id="确认Tomcat的运行模式"><a href="#确认Tomcat的运行模式" class="headerlink" title="确认Tomcat的运行模式"></a>确认Tomcat的运行模式</h5><blockquote><p>配置文件 server.xml</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Executor <span class="attribute">name</span>=<span class="string">"tomcatThreadPool"</span> <span class="attribute">namePrefix</span>=<span class="string">"catalina-exec-"</span> <span class="attribute">maxThreads</span>=<span class="string">"1024"</span> <span class="attribute">minSpareThreads</span>=<span class="string">"512"</span> <span class="attribute">prestartminSpareThreads</span>=<span class="string">"true"</span> /&gt;</span><br></pre></td></tr></table></figure><h6 id="关键配置"><a href="#关键配置" class="headerlink" title="关键配置"></a>关键配置</h6><blockquote><p>maxThreads  最大线程数, 默认是200</p></blockquote><blockquote><p>minSpareThread 最小活跃线程数, 默认是25</p></blockquote><blockquote><p>maxQueueSize 最大的等待队列个数，超过则请求拒绝默认值是Integer.MAX_VALUE ，一般不改变。在某些紧急状态修复问题需要调整</p></blockquote><blockquote><p>连接器（Connector）优化<br>Connector是连接器，负责接收客户的请求，以及向客户端回送响应的消息。所以Connector的优化是重要部分。默认情况下 Tomcat只支持200线程访问，超过这个数量的连接将被等待甚至超时放弃，所以我们需要提高这方面的处理能力。</p></blockquote><blockquote><p>nio配置- server.xml</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"14081"</span> <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span>connectionTimeout="20000"executor="tomcatThreadPool" <span class="attribute">URIEncoding</span>=<span class="string">"UTF-8"</span> <span class="attribute">compression</span>=<span class="string">"on"</span>   <span class="attribute">useBodyEncodingForURI</span>=<span class="string">"true"</span> <span class="attribute">enableLookups</span>=<span class="string">"false"</span> <span class="attribute">redirectPort</span>=<span class="string">"14443"</span> /&gt;</span><br></pre></td></tr></table></figure><blockquote><p>影响性能配置</p><ul><li>protocol</li></ul></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org<span class="selector-class">.apache</span><span class="selector-class">.coyote</span><span class="selector-class">.http11</span><span class="selector-class">.Http11Protocol</span>    - 阻塞式的Java连接器</span><br><span class="line">org<span class="selector-class">.apache</span><span class="selector-class">.coyote</span><span class="selector-class">.http11</span><span class="selector-class">.Http11NioProtocol</span>  - 不阻塞Java连接器</span><br><span class="line">org<span class="selector-class">.apache</span><span class="selector-class">.coyote</span><span class="selector-class">.http11</span><span class="selector-class">.Http11AprProtocol</span>  - APR / native 连接器</span><br><span class="line">选择不阻塞java连接</span><br></pre></td></tr></table></figure><ul><li><p>enableLookups</p><figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">若是你想<span class="built_in">request</span>.getRemoteHost()的调用履行，以便返回的长途客户端的实际主机名的DNS查询，则设置为<span class="literal">true</span>。设置为<span class="literal">false</span>时跳过DNS查找，并返回字符串的IP地址（从而提高性能）。默认场景下，禁用DNS查找</span><br></pre></td></tr></table></figure></li><li><p>compression</p></li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">设置成<span class="keyword">on</span>,开启压缩</span><br></pre></td></tr></table></figure><ul><li>禁用AJP链接器</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">使用Nginx+tomcat的架构，用不着AJP协议，所以把AJP连接器禁用</span><br><span class="line">server.xml注释掉以下配置</span><br><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8019"</span> <span class="attribute">protocol</span>=<span class="string">"AJP/1.3"</span> <span class="attribute">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span><br></pre></td></tr></table></figure><h5 id="优化JVM"><a href="#优化JVM" class="headerlink" title="优化JVM"></a>优化JVM</h5><h6 id="修改JAVA-OPTS参数"><a href="#修改JAVA-OPTS参数" class="headerlink" title="修改JAVA_OPTS参数"></a>修改JAVA_OPTS参数</h6><blockquote><p>JDK1.7</p></blockquote><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">JAVA_OPTS="-Djava.awt.headless=true</span> -Dfile.<span class="attr">encoding=UTF-8</span> -server -Xms512m -Xmx1024m -XX:<span class="attr">NewSize=512m</span> -XX:<span class="attr">MaxNewSize=1024M</span> -XX:<span class="attr">PermSize=1024m</span> -XX:<span class="attr">MaxPermSize=1024m</span> -XX:+DisableExplicitGC<span class="string">"</span></span><br></pre></td></tr></table></figure><blockquote><p>JDK1.8</p></blockquote><figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">JAVA_OPTS="-Djava.awt.headless=true</span> -Dfile.<span class="attr">encoding=UTF-8</span> -server -Xms1024m -Xmx1024m -XX:<span class="attr">NewSize=512m</span> -XX:<span class="attr">MaxNewSize=1024M</span> -XX:+DisableExplicitGC<span class="string">"</span></span><br></pre></td></tr></table></figure><h5 id="待更新"><a href="#待更新" class="headerlink" title="待更新"></a>待更新</h5>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;Tomcat运行模式&quot;&gt;&lt;a href=&quot;#Tomcat运行模式&quot; class=&quot;headerlink&quot; title=&quot;Tomcat运行模式&quot;&gt;&lt;/a&gt;Tomcat运行模式&lt;/h5&gt;&lt;blockquote&gt;
&lt;p&gt;分3种模式: bio,nio,apr 一般使用ni
      
    
    </summary>
    
      <category term="Tomcat" scheme="http://feyfey.online/categories/Tomcat/"/>
    
    
      <category term="Tomcat" scheme="http://feyfey.online/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>导入安全证书到jdk默认库</title>
    <link href="http://feyfey.online/2019/12/09/%E5%AF%BC%E5%85%A5%E5%AE%89%E5%85%A8%E8%AF%81%E4%B9%A6%E5%88%B0jdk%E9%BB%98%E8%AE%A4%E5%BA%93/"/>
    <id>http://feyfey.online/2019/12/09/导入安全证书到jdk默认库/</id>
    <published>2019-12-09T09:12:00.000Z</published>
    <updated>2019-12-09T09:40:37.927Z</updated>
    
    <content type="html"><![CDATA[<ol><li>把证书上传到数据库服务器</li><li>目录切换到oracle的bin目录下执行以下命令：</li></ol><h5 id="创建wallet"><a href="#创建wallet" class="headerlink" title="创建wallet"></a>创建wallet</h5><p><code>orapki wallet create –wallet &quot;F:/cert_file/cert&quot;  –pwd PASS1!2@3# -auto_login</code></p><h5 id="添加信任证书"><a href="#添加信任证书" class="headerlink" title="添加信任证书"></a>添加信任证书</h5><p><code>orapki wallet add -wallet F:\cert_file\cert -trusted_cert -cert &quot;F:\hls_file\cert\paytest.cer&quot; -pwd PASS1!2@3#</code></p><h5 id="查看wallet里面的证书"><a href="#查看wallet里面的证书" class="headerlink" title="查看wallet里面的证书"></a>查看wallet里面的证书</h5><p><code>orapki wallet display -wallet F:\cert_file\cert -pwd PASS1!2@3#</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;把证书上传到数据库服务器&lt;/li&gt;
&lt;li&gt;目录切换到oracle的bin目录下执行以下命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&quot;创建wallet&quot;&gt;&lt;a href=&quot;#创建wallet&quot; class=&quot;headerlink&quot; title=&quot;创建wallet
      
    
    </summary>
    
      <category term="Oracle" scheme="http://feyfey.online/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://feyfey.online/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>2019-Java知识点总结</title>
    <link href="http://feyfey.online/2019/12/09/2019-Java%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
    <id>http://feyfey.online/2019/12/09/2019-Java面试总结/</id>
    <published>2019-12-09T06:41:00.000Z</published>
    <updated>2019-12-09T09:20:09.447Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-ArrayList-和-LinkedList-有什么区别"><a href="#1-ArrayList-和-LinkedList-有什么区别" class="headerlink" title="1.ArrayList 和 LinkedList 有什么区别"></a>1.ArrayList 和 LinkedList 有什么区别</h4><blockquote><p>ArrayList和LinkedList都实现了List接口，有以下的不同点：</p><ol><li>ArrayList是基于索引的数据接口，它的底层是数组。它可以以O(1)时间复杂度对元素进行随机访问。与此对应，LinkedList是以元素列表的形式存储它的数据，每一个元素都和它的前一个和后一个元素链接在一起，在这种情况下，查找某个元素的时间复杂度是O(n)。</li><li>相对于ArrayList，LinkedList的插入，添加，删除操作速度更快，因为当元素被添加到集合任意位置的时候，不需要像数组那样重新计算大小或者是更新索引。</li><li>LinkedList比ArrayList更占内存，因为LinkedList为每一个节点存储了两个引用，一个指向前一个元素，一个指向下一个元素</li></ol></blockquote><h4 id="2-类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当-new-的时候，-他们的执行顺序"><a href="#2-类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当-new-的时候，-他们的执行顺序" class="headerlink" title="2.类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当 new 的时候， 他们的执行顺序"></a>2.类的实例化顺序，比如父类静态数据，构造函数，字段，子类静态数据，构造函数，字段，当 new 的时候， 他们的执行顺序</h4><blockquote><p>考察的是类加载器实例化时进行的操作步骤（加载–&gt;连接-&gt;初始化）</p><blockquote><p>父类静态代变量、<br>父类静态代码块、<br>子类静态变量、<br>子类静态代码块、<br>父类非静态变量（父类实例成员变量）、<br>父类构造函数、有没有有顺序的 Map 实现类， 如果有， 他们是怎么保证有序的。<br>TreeMap和LinkedHashMap是有序的（TreeMap默认升序，LinkedHashMap则记录了插入顺序<br>子类非静态变量（子类实例成员变量）、<br>子类构造函数。</p></blockquote></blockquote><h4 id="3-有没有有顺序的Map实现类-如果有-他们是怎么保证有序的"><a href="#3-有没有有顺序的Map实现类-如果有-他们是怎么保证有序的" class="headerlink" title="3.有没有有顺序的Map实现类,如果有,他们是怎么保证有序的?"></a>3.有没有有顺序的Map实现类,如果有,他们是怎么保证有序的?</h4><blockquote><p>TreeMap和LinkedHashMap是有序的（TreeMap默认升序， LinkedHashMap则记录了插入顺序)</p></blockquote><h4 id="4-简单说下HashMap的Put-方法"><a href="#4-简单说下HashMap的Put-方法" class="headerlink" title="4.简单说下HashMap的Put()方法"></a>4.简单说下HashMap的Put()方法</h4><p><img src="/images/pasted-19.png" alt="upload successful"></p><h4 id="5-抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么-类可以实现多个接口么？"><a href="#5-抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么-类可以实现多个接口么？" class="headerlink" title="5.抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么,类可以实现多个接口么？"></a>5.抽象类和接口的区别，类可以继承多个类么，接口可以继承多个接口么,类可以实现多个接口么？</h4><ol><li>抽象类和接口都不能直接实例化，如果要实例化，抽象类变量必须指向实现所有抽象方法的子类对象，接口变量必须指向实现所有接口方法的类对象。 </li><li>抽象类要被子类继承，接口要被类实现。 </li><li>接口只能做方法申明，抽象类中可以做方法申明，也可以做方法实现 </li><li>接口里定义的变量只能是公共的静态的常量，抽象类中的变量是普通变量。 </li><li>抽象类里的抽象方法必须全部被子类所实现，如果子类不能全部实现父类抽象方法，那么该子类只能是抽象类。同样，一个实现接口的时候，如不能全部实现接口方法，那么该类也只能为抽象类。 </li><li>抽象方法只能申明，不能实现。abstract void abc();不能写成abstract void abc(){}。 </li><li>抽象类里可以没有抽象方法 </li><li>如果一个类里有抽象方法，那么这个类只能是抽象类 </li><li>抽象方法要被实现，所以不能是静态的，也不能是私有的。 </li><li>接口可继承接口，并可多继承接口，但类只能单根继承。</li></ol><h4 id="6-继承和聚合的区别在哪"><a href="#6-继承和聚合的区别在哪" class="headerlink" title="6.继承和聚合的区别在哪"></a>6.继承和聚合的区别在哪</h4><ol><li>继承指的是一个类（称为子类、子接口）继承另外的一个类（称为父类、父接口）的功能，并可以增加它自己的新功能的能力，继承是类与类或者接口与接口之间最常见的关系；在Java中此类关系通过关键字extends明确标识，在设计时一般没有争议性； </li><li>聚合是关联关系的一种特例，他体现的是整体与部分、拥有的关系，即has-a的关系，此时整体与部分之间是可分离的，他们可以具有各自的生命周期，部分可以属于多个整体对象，也可以为多个整体对象共享；比如计算机与CPU、公司与员工的关系等；表现在代码层面，和关联关系是一致的，只能从语义级别来区分；</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;1-ArrayList-和-LinkedList-有什么区别&quot;&gt;&lt;a href=&quot;#1-ArrayList-和-LinkedList-有什么区别&quot; class=&quot;headerlink&quot; title=&quot;1.ArrayList 和 LinkedList 有什么区别&quot;&gt;
      
    
    </summary>
    
      <category term="Java" scheme="http://feyfey.online/categories/Java/"/>
    
    
      <category term="Java" scheme="http://feyfey.online/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>手动删除数据库的dbf文件导致错误</title>
    <link href="http://feyfey.online/2019/08/28/%E6%89%8B%E5%8A%A8%E5%88%A0%E9%99%A4%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84dbf%E6%96%87%E4%BB%B6%E5%AF%BC%E8%87%B4%E9%94%99%E8%AF%AF/"/>
    <id>http://feyfey.online/2019/08/28/手动删除数据库的dbf文件导致错误/</id>
    <published>2019-08-28T14:52:00.000Z</published>
    <updated>2019-08-30T04:06:49.846Z</updated>
    
    <content type="html"><![CDATA[<h6 id="问题：清理服务器时，误删除了数据库的dbf文件，且未备份，导致今天在启动数据库时无法启动，经网上查找资料和参考，整理方法如下："><a href="#问题：清理服务器时，误删除了数据库的dbf文件，且未备份，导致今天在启动数据库时无法启动，经网上查找资料和参考，整理方法如下：" class="headerlink" title="问题：清理服务器时，误删除了数据库的dbf文件，且未备份，导致今天在启动数据库时无法启动，经网上查找资料和参考，整理方法如下："></a>问题：清理服务器时，误删除了数据库的dbf文件，且未备份，导致今天在启动数据库时无法启动，经网上查找资料和参考，整理方法如下：</h6><h6 id="操作步骤："><a href="#操作步骤：" class="headerlink" title="操作步骤："></a>操作步骤：</h6><p><img src="/images/pasted-16.png" alt="upload successful"></p><p><img src="/images/pasted-17.png" alt="upload successful"></p><p><img src="/images/pasted-18.png" alt="upload successful"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h6 id=&quot;问题：清理服务器时，误删除了数据库的dbf文件，且未备份，导致今天在启动数据库时无法启动，经网上查找资料和参考，整理方法如下：&quot;&gt;&lt;a href=&quot;#问题：清理服务器时，误删除了数据库的dbf文件，且未备份，导致今天在启动数据库时无法启动，经网上查找资料和参考，整
      
    
    </summary>
    
      <category term="Oracle" scheme="http://feyfey.online/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://feyfey.online/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>新建工程并关联提交到Github</title>
    <link href="http://feyfey.online/2019/08/26/%E6%96%B0%E5%BB%BA%E5%B7%A5%E7%A8%8B%E5%B9%B6%E5%85%B3%E8%81%94%E6%8F%90%E4%BA%A4%E5%88%B0Github/"/>
    <id>http://feyfey.online/2019/08/26/新建工程并关联提交到Github/</id>
    <published>2019-08-26T02:45:00.000Z</published>
    <updated>2019-08-30T04:07:17.669Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>cd进入你放项目文件的地址，我的地址在<strong>D:\WORK\项目程序</strong></p></li><li><p>输入<code>git init</code>  这个意思是在当前项目的目录中生成本地的git管理（会发现在当前目录下多了一个.git文件夹）</p></li><li><p>输入<code>git add</code>     这个是将项目上所有的文件添加到仓库中的意思，如果想添加某个特定的文件，只需把.换成这个特定的文件名即可。</p></li><li><p>输入<code>git commit -m &quot;first commit&quot;</code>表示你对这次提交的注释，双引号里面的内容可以根据个人的需要改。</p></li><li><p>输入<code>git remote add origin https://自己的gihub仓库url地址</code>,将本地的仓库关联到github上,这里本人输入的是<code>git remote add origin https://github.com/AugusZhu/JavaTools.git</code></p></li><li><p>输入<code>git push -u origin master</code>，这是把代码上传到github远程仓库</p><p><strong>踩坑注意</strong></p><ul><li><p>若第五步报错如下</p><p>To <a href="https://github.com/AugusZhu/JavaTools.git" target="_blank" rel="noopener">https://github.com/AugusZhu/JavaTools.git</a></p><p> ! [rejected]        master -&gt; master (fetch first)</p><p>error: failed to push some refs to ‘<a href="https://github.com/AugusZhu/JavaTools.git&#39;" target="_blank" rel="noopener">https://github.com/AugusZhu/JavaTools.git&#39;</a></p><p>原因：本地没有update到最新版本的项目（git上有README.md文件没下载下来）</p><p>解决办法：<code>git pull --rebase origin master</code>可以看到，此时已经把github上最新的文件下载下来了,</p><p>接着再  <code>git push origin master</code></p></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;cd进入你放项目文件的地址，我的地址在&lt;strong&gt;D:\WORK\项目程序&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;输入&lt;code&gt;git init&lt;/code&gt;  这个意思是在当前项目的目录中生成本地的git管理（会发现在当前目录下多了一
      
    
    </summary>
    
      <category term="Github" scheme="http://feyfey.online/categories/Github/"/>
    
    
      <category term="Github" scheme="http://feyfey.online/tags/Github/"/>
    
  </entry>
  
  <entry>
    <title>weblogic12c集群搭建</title>
    <link href="http://feyfey.online/2019/08/24/weblogic12c%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>http://feyfey.online/2019/08/24/weblogic12c集群搭建/</id>
    <published>2019-08-23T19:23:00.000Z</published>
    <updated>2019-08-30T08:55:18.010Z</updated>
    
    <content type="html"><![CDATA[<h1 id="weblogic12c集群搭建"><a href="#weblogic12c集群搭建" class="headerlink" title="weblogic12c集群搭建"></a>weblogic12c集群搭建</h1><h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><table><thead><tr><th>服务器名</th><th>监听地址</th><th>监听端口</th><th>备注</th></tr></thead><tbody><tr><td>AdminServer (管理)</td><td>10.40.128.182</td><td>7001</td><td>管理服务器</td></tr><tr><td>proxy-server</td><td>10.40.128.182</td><td>8080</td><td>代理服务器</td></tr><tr><td>Server-0</td><td>10.40.128.182</td><td>9002</td><td>受管服务器</td></tr><tr><td>Server-1</td><td>10.40.128.183</td><td>9002</td><td>受管服务器</td></tr></tbody></table><h2 id="启动管理服务器"><a href="#启动管理服务器" class="headerlink" title="启动管理服务器"></a>启动管理服务器</h2><p>进去创建的域所在目录，执行<code>nohup ./bin/startWeblogic.sh &amp;</code> <br><br>进入控制台<a href="http://10.40.128.182:7001/console" target="_blank" rel="noopener">http://10.40.128.182:7001/console</a></p><h2 id="配置服务器"><a href="#配置服务器" class="headerlink" title="配置服务器"></a>配置服务器</h2><ul><li>点击环境-&gt;服务器-&gt;新建<br><br><img src="/images/pasted-4.png" alt="weblogic8"></li><li>输入服务器地名Server-0，主机IP 10.40.128.182，端口号 9002 集群不用选择<br><br><img src="/images/pasted-5.png" alt="weblogic9"></li><li>同理，配置好Server-1，proxy-server<br></li></ul><p>##创建集群</p><ul><li>点击环境-&gt;集群-&gt;新建-&gt;集群</li><li>选择多点传送，不用管多点传送地址<br><img src="/images/pasted-6.png" alt="weblogic10"></li><li>点击确定</li></ul><p>##创建计算机</p><ul><li>创建计算机以配置节点管理器</li><li>点击环境-&gt;计算机-&gt;新建，输入计算机名称，操作系统类型<br><br><img src="/images/pasted-7.png" alt="weblogic11"></li><li>将连接类型设为普通，监听地址改为10.40.128.182<br><img src="/images/pasted-8.png" alt="weblogic12"></li><li>点击确定</li></ul><p>##配置受管服务器的计算机和集群</p><ul><li>点击环境-&gt;服务器，点击服务server-0</li><li>配置计算机和集群信息<br><img src="/images/pasted-9.png" alt="weblogic13"></li><li>同理配置Server-1，proxy-server 但是procy-server不需要配置集群。</li></ul><p>##启动节点管理器<br>进入创建的域所在的目录，执行<br><br><code>nohup ./bin/startNodeManager.sh &gt; nodeManager.log 2&gt;&amp;1 &amp;</code></p><p>##配置代理服务器<br>进入weblogic目录下 ./wlserver/common/bin/<br>执行<code>./config.sh</code><br><br>选择更新现有配置。<br><br>创建代理服务器，服务器选择proxy-server。<br><br><img src="/images/pasted-10.png" alt="weblogic14"><br>进入所在域的目录，进入./apps/OracleProxy4_Cluster-0_proxy-server/WEB-INF,修改weblogic.xml。<br><br>修改如图参数为项目的上下文。<br><br><img src="/images/pasted-11.png" alt="weblogic15"><br>然后部署更新代理服务器项目。</p><p>##启动服务器<br>复制10.40.128.182上域所在目录，到10.40.128.183下。<br><br>启动183的weblogic。<br><br>在182执行 <code>./bin/startManagedWeblogic.sh proxy-server http://10.40.128.182:7001</code><br><br><code>./bin/startManagedWeblogic.sh Server-0 http://10.40.128.182:7001</code><br><br>在183执行<br><br><code>./bin/startManagedWeblogic.sh Server-1 http://10.30.128.182:7001</code><br><br>可在<a href="http://10.40.128.182:7001/console" target="_blank" rel="noopener">http://10.40.128.182:7001/console</a>服务器上看到执行成功。<br><br>(/images/pasted-12.png)</p><p>##配置session复制<br>在项目的WEF-INF文件夹下新增weblogic.xml:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE weblogic-web-app PUBLIC "-//BEA Systems, Inc.//DTD Web Application 8.1//EN"</span></span><br><span class="line"><span class="meta">        "http://www.bea.com/servers/wls810/dtd/weblogic810-web-jar.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">weblogic-web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">session-descriptor</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>CookieName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>JSESSIONID1<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">session-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">session-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>PersistentStoreType<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>replicated_if_clustered<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">session-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">session-descriptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">weblogic-web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>##完成<br>部署项目，完成后。访问<a href="http://10.40.128.182:8080/core" target="_blank" rel="noopener">http://10.40.128.182:8080/core</a></p><p>###踩坑</p><ul><li>后台免密启动受管服务器<br>进入sercers文件夹下需要免密启动的服务器文件夹，进入security目录，创建boot.properties。<br>格式为：</li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">username</span>=weblogic</span><br><span class="line"><span class="attr">password</span>=weblogic</span><br></pre></td></tr></table></figure><p>首次启动后自动会被加密<br></p><ul><li><p>报错信息如下：<br><img src="/images/pasted-13.png" alt="weblogic17"><br>启动时未能连接到管理服务器。可能是节点管理器未能启动的原因。需要先启动管理服务器上的节点管理器。<br><code>nohup ./startNodeManager.sh &gt; nodeManager.log 2&gt;&amp;1 &amp;</code>0v0</p></li><li><p>项目启动后发现点击登录后仍然跳转到登录页面不报错，怀疑是session复制的问题。经过研究发现是由于2台受管服务器连接的不是同一个redis。修改config.properties中redis.ip为其中一台服务器的ip。2台服务器的redis最好做一个主备。</p></li><li><p>websocket在weblogic服务器下无法使用，sockJs会自动切换到xhr-streaming协议。</p></li><li><p>项目启动后，登陆页面后跳转报错，提示服务器资源无法访问。由于weblogic在访问/时会自动跳转到/index.html，因此需要在页面注册注册index.html。<br><img src="/images/pasted-14.png" alt="weblogic18"></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;weblogic12c集群搭建&quot;&gt;&lt;a href=&quot;#weblogic12c集群搭建&quot; class=&quot;headerlink&quot; title=&quot;weblogic12c集群搭建&quot;&gt;&lt;/a&gt;weblogic12c集群搭建&lt;/h1&gt;&lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href
      
    
    </summary>
    
      <category term="weblogic" scheme="http://feyfey.online/categories/weblogic/"/>
    
    
      <category term="weblogic" scheme="http://feyfey.online/tags/weblogic/"/>
    
  </entry>
  
  <entry>
    <title>Oracle修复系统包损坏</title>
    <link href="http://feyfey.online/2019/08/21/Oracle%E4%BF%AE%E5%A4%8D%E7%B3%BB%E7%BB%9F%E5%8C%85%E6%8D%9F%E5%9D%8F/"/>
    <id>http://feyfey.online/2019/08/21/Oracle修复系统包损坏/</id>
    <published>2019-08-21T15:03:00.000Z</published>
    <updated>2019-08-23T18:54:58.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="问题：项目上遇到了dbms-aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。"><a href="#问题：项目上遇到了dbms-aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。" class="headerlink" title="问题：项目上遇到了dbms_aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。"></a>问题：项目上遇到了dbms_aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。</h5><p><img src="/images/pasted-3.png" alt="upload successful"></p><h5 id="解决办法：oracle加密系统包损坏后无法通过单独编译包来恢复，需要使用内置脚本catproc-sql重新编译整个oracle的系统工具包。"><a href="#解决办法：oracle加密系统包损坏后无法通过单独编译包来恢复，需要使用内置脚本catproc-sql重新编译整个oracle的系统工具包。" class="headerlink" title="解决办法：oracle加密系统包损坏后无法通过单独编译包来恢复，需要使用内置脚本catproc.sql重新编译整个oracle的系统工具包。"></a>解决办法：oracle加密系统包损坏后无法通过单独编译包来恢复，需要使用内置脚本catproc.sql重新编译整个oracle的系统工具包。</h5><h5 id="操作方法："><a href="#操作方法：" class="headerlink" title="操作方法："></a>操作方法：</h5><ul><li>1 在oracle服务器上找到catproc.sql文件</li></ul><p><img src="/images/pasted-1.png" alt="upload successful"></p><ul><li>2 sqlplus下执行此脚本，执行时间可能较久</li></ul><p><img src="/images/pasted-2.png" alt="upload successful"></p><ul><li>3 修复完成后有些过程可能需要重新授权</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;问题：项目上遇到了dbms-aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。&quot;&gt;&lt;a href=&quot;#问题：项目上遇到了dbms-aq包损坏的情况，导致高级队列无法正常使用，oracle定时任务也无法启动。&quot; class=&quot;headerl
      
    
    </summary>
    
      <category term="Oracle" scheme="http://feyfey.online/categories/Oracle/"/>
    
    
      <category term="Oracle" scheme="http://feyfey.online/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>本博客搭建指南</title>
    <link href="http://feyfey.online/2019/08/20/%E6%9C%AC%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%8C%87%E5%8D%97/"/>
    <id>http://feyfey.online/2019/08/20/本博客搭建指南/</id>
    <published>2019-08-20T14:16:50.000Z</published>
    <updated>2019-08-20T14:16:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="构架"><a href="#构架" class="headerlink" title="构架"></a>构架</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hexo + Github Pages + Next</span><br></pre></td></tr></table></figure><p>参考网址: <a href="https://blog.csdn.net/tongyijia/article/details/52602587" target="_blank" rel="noopener">链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;构架&quot;&gt;&lt;a href=&quot;#构架&quot; class=&quot;headerlink&quot; title=&quot;构架&quot;&gt;&lt;/a&gt;构架&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c
      
    
    </summary>
    
    
  </entry>
  
</feed>
